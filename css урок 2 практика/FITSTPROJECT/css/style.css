/* единый стандарт( шаблон страницы) */
*{
	padding: 0;
	margin: 0;
	border: 0;

}
*,*:before,*:after{
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing:  border-box;
}
:focus,:active{outline: none;}
a: focus,a:active{outline: none;}

nav,footer,header,aside{display: block;}

html,body{
	height: 100%;
	width: 100%;
	font-size: 100%;
	line-height: 1;
	font-size: 14px;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}

input,button,textarea{font-family: inherit;}

input::-ms-clear{display: none;}
button{cursor: pointer;}
button::-moz-focus-inner{padding: 0;border: 0;}
a, a:visited{text-decoration: none;}
ul li{list-style: none;}
img{vertical-align: top;}

h1,h2,h3,h4,h5,h6{font-size: inherit;font-weight: 400;}

body{
		font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	/*Свойство padding устанавливает внутренние отступы/поля со всех сторон элемента. 
	Область отступов это пространство между содержанием элемента и его границей. Отрицательные значения не допускаются.*/
	padding: 100px 30px 30px 30px;
	background: url('../img/big.png') center no-repeat fixed;
	
}
.listen{
	margin: 50px 0 50px;
}
/*непосредственно обращаемся к li тоесть ко всем пунктам*/
.listen li{
	color:rgb(254, 214, 188);
	font-size: 24px;
	/*Свойство margin CSS определяет внешний отступ на всех четырёх сторонах элемента. Это сокращение, 
	которое устанавливает все отдельные поля одновременно: margin сверху | справа | снизу | слева (при 4 пунктах 0 0 0 0).*/
	margin: 0 0 40px 0;
	background: url('../img/listen.jpg') 0 0/contain no-repeat;
	padding: 0px 0px 0px 30px;

}

.block{
	/* Бэкграунд и бэкграунд калор необходим для составления внутренней заливки фона находящегося в блоке */
	/*background:rgba(254, 214, 188, 0.5);*/
	
	/* Бэкграунд в данном случае с url показывает путь к картинке которую мы хотим сделать фоновым изображением, 
	примечания, данная картинка не будет подстраиваться автоматически, то есть ее размер надо заранее подогнать под размер блока фона, к тому же
	чем больше изображение, тем больше памяти занимает и тем дольше будет открываться сай, что не есть хорошо. */
	/* no-repeat необходим для того чтобы картинка больше одного раза не повторялась, repeat x это повторение картинки по горизонтали 
	a repeat y повторение по вертикали*/
	/*background: url('../img/home.png') no repeat;*/
	/* следущие две цифры после скобок означают расположение картинки в фоновом окне, дефолтные 0 0, 
	а дальше там уже где нужно вам, меняем их(эти значения могут быть в пикселях, в процентах, 
	а так же писаться center в центрe, left с лева и тд*/
	
	/*background: url('../img/home.png') center no-repeat; */

	/* background-size это свойство размера фона, позволяет выбрать размер в процентах по ширине или по высоте, а так же растянуть, 
	так же существуют специальные значения к примеру contein позволяющий растянуть изоброжение ровно так, чтобы оно поместилось
	внутрь блока */
	/*background: url('../img/fly.png') 0 0/auto 100% no-repeat ; - растянет изоброжение по ширине, надо писать после 0 0/*/
	/*background: url('../img/fly.png') 0 0/contain  no-repeat; - делает маленько изображение заполняющий блок*/
	/* cover необходим во первых для выраавнивания по центру блока а во вторых, при изменении размера окна браузера, картинка 
	так же будет меняться и оставаться все равно в центре блока */
	background: url('../img/serch1.png') 50%/cover  no-repeat;

	/*для того чтобы добавить несколько картинок на один фон надо использовать url несколько раз в одной строке через запятую, 
	самая первая картинка будет нижним слоем, вторая над ней и тд*/
	/* задаем общий обьем в 300 пиксиилей а точнее высоту*/
	height: 70px;
	/* задаем радиус контура фона или если точнее, его округление(делаем прямоугольник овалом) */
	border-radius: 15px ;
	/* создаем обьемную тень вокруг фона */
	box-shadow: 0 0 10px #000;
}